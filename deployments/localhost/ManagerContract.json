{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "TradingEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "TradingStopped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "durationInDays",
          "type": "uint256"
        }
      ],
      "name": "createTrust",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "stopTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "tradeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "trusts",
      "outputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xae9d7c8c4ff4e781f05a3cc6463293899b0bc8347540e42ba11b7c2a1cee0c00",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1232121",
    "logsBloom": "0x
    "blockHash": "0x8347626f7b83f68eb17e75131b8dff44b50dd36fa2a587428f12fa66431b2f6f",
    "transactionHash": "0xae9d7c8c4ff4e781f05a3cc6463293899b0bc8347540e42ba11b7c2a1cee0c00",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1232121",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "77b7250a7715c60bcb3bbe17ad00cfdf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"TradingStopped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"durationInDays\",\"type\":\"uint256\"}],\"name\":\"createTrust\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"stopTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"tradeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trusts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ManagerContract.sol\":\"ManagerContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ManagerContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.26;\\r\\n\\r\\nimport {ISwap} from './interfaces/ISwap.sol';\\r\\nimport './interfaces/IERC20.sol';\\r\\nimport './interfaces/IWETH.sol';\\r\\n\\r\\ncontract ManagerContract {\\r\\n\\r\\n    address private constant UNISWAP_V2_ROUTER =\\r\\n        0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\\r\\n\\r\\n    ISwap private router = ISwap(UNISWAP_V2_ROUTER);\\r\\n\\r\\n    // \\u0421\\u0442\\u0440\\u0443\\u043a\\u0442\\u0443\\u0440\\u0430 \\u0434\\u043b\\u044f \\u0445\\u0440\\u0430\\u043d\\u0435\\u043d\\u0438\\u044f \\u0438\\u043d\\u0444\\u043e\\u0440\\u043c\\u0430\\u0446\\u0438\\u0438 \\u043e \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u043c \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0438\\r\\n    struct Trust {\\r\\n        address manager; // \\u0410\\u0434\\u0440\\u0435\\u0441 \\u043c\\u0435\\u043d\\u0435\\u0434\\u0436\\u0435\\u0440\\u0430\\r\\n        uint256 expiry; // \\u0421\\u0440\\u043e\\u043a \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u044f\\r\\n        bool isActive; // \\u0410\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e \\u043b\\u0438 \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435\\r\\n    }\\r\\n\\r\\n    // \\u0425\\u0440\\u0430\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0445 \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0439 \\u0434\\u043b\\u044f \\u043a\\u0430\\u0436\\u0434\\u043e\\u0433\\u043e \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f\\r\\n    mapping(address => Trust) public trusts;\\r\\n\\r\\n    // \\u0421\\u043e\\u0431\\u044b\\u0442\\u0438\\u044f \\u0434\\u043b\\u044f \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439\\r\\n    event TokensDeposited(address indexed user, address indexed manager, uint256 amount);\\r\\n    event TradingEnabled(address indexed manager, uint256 expiry);\\r\\n    event TradingStopped(address indexed manager);\\r\\n\\r\\n    // \\u041c\\u043e\\u0434\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0434\\u043b\\u044f \\u043f\\u0440\\u043e\\u0432\\u0435\\u0440\\u043a\\u0438, \\u0447\\u0442\\u043e \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u044f \\u0432\\u044b\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442\\u0441\\u044f \\u043c\\u0435\\u043d\\u0435\\u0434\\u0436\\u0435\\u0440\\u043e\\u043c\\r\\n    modifier onlyManager(address user) {\\r\\n        require(msg.sender == trusts[user].manager, \\\"Not the manager\\\");\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    // \\u041c\\u043e\\u0434\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0434\\u043b\\u044f \\u043f\\u0440\\u043e\\u0432\\u0435\\u0440\\u043a\\u0438, \\u0447\\u0442\\u043e \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0430\\u043a\\u0442\\u0438\\u0432\\u043d\\u043e\\r\\n    modifier onlyActiveTrust(address user) {\\r\\n        require(trusts[user].isActive, \\\"No active trust found\\\");\\r\\n        require(block.timestamp < trusts[user].expiry, \\\"Trust period has expired\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // \\u0424\\u0443\\u043d\\u043a\\u0446\\u0438\\u044f \\u0434\\u043b\\u044f \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u044f \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u044f\\r\\n    function createTrust(address manager, uint256 durationInDays) external returns (address) {\\r\\n        require(trusts[msg.sender].manager == manager, \\\"Trust already exists\\\");\\r\\n        require(manager != address(0), \\\"Invalid manager address\\\");\\r\\n\\r\\n        // \\u0423\\u0441\\u0442\\u0430\\u043d\\u0430\\u0432\\u043b\\u0438\\u0432\\u0430\\u0435\\u043c \\u0441\\u0440\\u043e\\u043a \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u044f\\r\\n        uint256 expiry = block.timestamp + durationInDays * 1 days;\\r\\n        trusts[msg.sender] = Trust(manager, expiry, true);\\r\\n        \\r\\n        emit TradingEnabled(manager, expiry);\\r\\n\\r\\n        return address(0);\\r\\n    }\\r\\n\\r\\n    // \\u0424\\u0443\\u043d\\u043a\\u0446\\u0438\\u044f \\u0434\\u043b\\u044f \\u0434\\u0435\\u043f\\u043e\\u0437\\u0438\\u0442\\u0430 \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432 \\u0432 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\r\\n    function depositTokens(address token, uint256 amount) external onlyActiveTrust(msg.sender) {\\r\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        \\r\\n        // \\u041f\\u0435\\u0440\\u0435\\u0434\\u0430\\u0435\\u043c \\u0442\\u043e\\u043a\\u0435\\u043d\\u044b \\u043d\\u0430 \\u044d\\u0442\\u043e\\u0442 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\r\\n        // \\u0417\\u0434\\u0435\\u0441\\u044c \\u043d\\u0443\\u0436\\u043d\\u043e \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c ERC20 \\u0442\\u043e\\u043a\\u0435\\u043d \\u0438\\u043d\\u0442\\u0435\\u0440\\u0444\\u0435\\u0439\\u0441\\r\\n        // \\u041f\\u0435\\u0440\\u0435\\u0432\\u043e\\u0434\\u0438\\u043c \\u0442\\u043e\\u043a\\u0435\\u043d\\u044b \\u043e\\u0442 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f \\u0432 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\r\\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\\r\\n        \\r\\n        emit TokensDeposited(msg.sender, trusts[msg.sender].manager, amount);\\r\\n    }\\r\\n\\r\\n    // \\u0424\\u0443\\u043d\\u043a\\u0446\\u0438\\u044f \\u0434\\u043b\\u044f \\u0442\\u043e\\u0440\\u0433\\u043e\\u0432\\u043b\\u0438 \\u0442\\u043e\\u043a\\u0435\\u043d\\u0430\\u043c\\u0438 \\u043d\\u0430 Uniswap\\r\\n    function tradeTokens(address tokenIn, address tokenOut, uint amountIn) public /*onlyManager(msg.sender)*/ returns (uint256 amountOut) {\\r\\n        require(amountIn > 0, \\\"Amount must be greater than 0\\\");\\r\\n\\r\\n        IERC20 tmpTokenIn = IERC20(tokenIn);\\r\\n\\r\\n        tmpTokenIn.transferFrom(msg.sender, address(this), amountIn);\\r\\n        tmpTokenIn.approve(address(router), amountIn);\\r\\n\\r\\n        // \\u041e\\u0431\\u043c\\u0435\\u043d \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432 \\u043d\\u0430 Uniswap\\r\\n        address[] memory path = new address[](2);\\r\\n\\r\\n        path[0] = tokenIn;\\r\\n        path[1] = tokenOut;\\r\\n\\r\\n        uint256[] memory amounts = router.getAmountsOut(amountIn, path);\\r\\n\\r\\n        uint256[] memory amountsOutResult = router.swapExactTokensForTokens(\\r\\n            amountIn, amounts[1], path, msg.sender, block.timestamp\\r\\n        );\\r\\n\\r\\n        // \\u0423\\u0431\\u0435\\u0436\\u0434\\u0430\\u0435\\u043c\\u0441\\u044f, \\u0447\\u0442\\u043e \\u044d\\u0442\\u043e\\u0442 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043d \\u043d\\u0430 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432\\r\\n        return amountsOutResult[1];\\r\\n    }\\r\\n\\r\\n    function stopTrading(address user) external {\\r\\n        if (block.timestamp < trusts[user].expiry) {\\r\\n            trusts[user].isActive = false; // \\u041e\\u0442\\u043a\\u043b\\u044e\\u0447\\u0430\\u0435\\u043c \\u0434\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0443\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435\\r\\n            emit TradingStopped(trusts[user].manager);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    \\r\\n}\",\"keccak256\":\"0x6435ad6867c19c26a98fafb5fbeff3f028f8f49de1a286efb2f547bc723bcca7\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.26;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256); //\\u043e\\u0431\\u0449\\u0435\\u0435 \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        external\\r\\n        returns (bool);\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256); //View \\u0432 Solidity \\u2014 \\u044d\\u0442\\u043e \\u043c\\u043e\\u0434\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0434\\u043b\\u044f \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u0439 \\u0447\\u0442\\u0435\\u043d\\u0438\\u044f, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0443\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u0435\\u0442, \\u0447\\u0442\\u043e \\u043e\\u043d\\u0438 \\u043d\\u0435 \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0438\\u0437\\u043c\\u0435\\u043d\\u044f\\u0442\\u044c \\u043f\\u0435\\u0440\\u0435\\u043c\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u044f, \\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0451\\u043d\\u043d\\u044b\\u0435 \\u0432 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u0435. \\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount)\\r\\n        external\\r\\n        returns (bool);\\r\\n}\",\"keccak256\":\"0x12c88ae5f590c467e8ef00ac87995b9e5ad76c97b3d97715cae4c5a4ced80557\",\"license\":\"MIT\"},\"contracts/interfaces/ISwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.26;\\r\\n\\r\\ninterface ISwap {\\r\\n    function swapExactTokensForTokens(  //\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c \\u0432\\u0432\\u043e\\u0434\\u0438\\u0442 \\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u043e\\u043d \\u0445\\u043e\\u0447\\u0435\\u0442 \\u043e\\u0431\\u043c\\u0435\\u043d\\u044f\\u0442\\u044c, \\u0435\\u043c\\u0443 \\u043f\\u0438\\u0448\\u0443\\u0442 \\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u043e\\u043d \\u0437\\u0430 \\u044d\\u0442\\u043e \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path, //route, \\u043f\\u0435\\u0440\\u0432\\u044b\\u0439 \\u044d\\u043b\\u0435\\u043c\\u0435\\u043d\\u0442 \\u0432 \\u043c\\u0430\\u0441\\u0441\\u0438\\u0432\\u0435 - \\u0442\\u043e\\u043a\\u0435\\u043d, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0445\\u043e\\u0442\\u044f\\u0442 \\u043f\\u043e\\u043c\\u0435\\u043d\\u044f\\u0442\\u044c, \\u0430 \\u043f\\u043e\\u0441\\u043b\\u0435\\u0434\\u043d\\u0438\\u0439 - \\u0442\\u043e\\u043a\\u0435\\u043d, \\u043d\\u0430 \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0435\\u0433\\u043e \\u0445\\u043e\\u0442\\u044f\\u0442 \\u043e\\u0431\\u043c\\u0435\\u043d\\u044f\\u0442\\u044c\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactTokens(  //\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c \\u0432\\u0432\\u043e\\u0434\\u0438\\u0442, \\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u0435\\u043c\\u0443 \\u043d\\u0443\\u0436\\u043d\\u043e \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\u044c, \\u0435\\u043c\\u0443 \\u043f\\u0438\\u0448\\u0443\\u0442, \\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u043e\\u043d \\u0434\\u043e\\u043b\\u0436\\u0435\\u043d \\u043e\\u0442\\u0434\\u0430\\u0442\\u044c \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path, //calldata - \\u0434\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043d\\u0435\\u0438\\u0437\\u043c\\u0435\\u043d\\u044f\\u0435\\u043c\\u044b \\u0438 \\u0445\\u0440\\u0430\\u043d\\u044f\\u0442\\u0441\\u044f \\u0432 memory (\\u043d\\u0435\\u043f\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u043d\\u0430\\u044f \\u043f\\u0430\\u043c\\u044f\\u0442\\u044c)\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts); // External \\u2014 \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u0438 \\u044d\\u0442\\u043e\\u0433\\u043e \\u0442\\u0438\\u043f\\u0430 \\u044f\\u0432\\u043b\\u044f\\u044e\\u0442\\u0441\\u044f \\u0447\\u0430\\u0441\\u0442\\u044c\\u044e \\u0438\\u043d\\u0442\\u0435\\u0440\\u0444\\u0435\\u0439\\u0441\\u0430 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u0430, \\r\\n    //\\u0447\\u0442\\u043e \\u0437\\u043d\\u0430\\u0447\\u0438\\u0442 \\u043e\\u043d\\u0438 \\u043c\\u043e\\u0433\\u0443\\u0442 \\u0431\\u044b\\u0442\\u044c \\u0432\\u044b\\u0437\\u0432\\u0430\\u043d\\u044b \\u0438\\u0437 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u043e\\u0432 \\u043f\\u043e\\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\\u043e\\u043c message call. \\u0412\\u044b\\u0437\\u0432\\u0430\\u043d\\u043d\\u044b\\u0439 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442 \\u0447\\u0438\\u0441\\u0442\\u0443\\u044e \\u043a\\u043e\\u043f\\u0438\\u044e memory \\r\\n    //\\u0438 \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f \\u043a \\u0434\\u0430\\u043d\\u043d\\u044b\\u043c payload, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0440\\u0430\\u0441\\u043f\\u043e\\u043b\\u043e\\u0436\\u0435\\u043d\\u044b \\u0432 \\u043e\\u0442\\u0434\\u0435\\u043b\\u044c\\u043d\\u043e\\u0439 \\u0441\\u0435\\u043a\\u0446\\u0438\\u0438 \\u2014 calldata. \\u041f\\u043e\\u0441\\u043b\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043d\\u0438\\u044f \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f, \\u0432\\u043e\\u0437\\u0432\\u0440\\u0430\\u0449\\u0430\\u0435\\u043c\\u044b\\u0435 \\u0434\\u0430\\u043d\\u043d\\u044b\\u0435 \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0440\\u0430\\u0437\\u043c\\u0435\\u0449\\u0435\\u043d\\u044b \\r\\n    //\\u0432 \\u0437\\u0430\\u0440\\u0430\\u043d\\u0435\\u0435 \\u0432\\u044b\\u0434\\u0435\\u043b\\u0435\\u043d\\u043d\\u043e\\u043c \\u0432\\u044b\\u0437\\u0432\\u0430\\u0432\\u0448\\u0438\\u043c \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u043e\\u043c \\u043c\\u0435\\u0441\\u0442\\u0435 \\u0432 memory.\\r\\n\\r\\n    function getAmountsOut(\\r\\n        uint256 amountIn, \\r\\n        address[] calldata path\\r\\n    ) external view returns (uint256[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x8f2833370b593722821e607af6f7fafd2fdcdb6ab152bbaa0a3817f862505697\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.26;\\r\\n\\r\\nimport './IERC20.sol';\\r\\n\\r\\ninterface IWETH is IERC20 {\\r\\n    function deposit() external payable; //Payable \\u0432 Solidity \\u2014 \\u044d\\u0442\\u043e \\u043c\\u043e\\u0434\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0434\\u043b\\u044f \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u0439, \\r\\n    //\\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043c\\u043e\\u0433\\u0443\\u0442 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u044c \\u044d\\u0444\\u0438\\u0440 \\u0432\\u043c\\u0435\\u0441\\u0442\\u0435 \\u0441 \\u0432\\u044b\\u0437\\u043e\\u0432\\u043e\\u043c \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u0438. \\u0411\\u0435\\u0437 \\u044d\\u0442\\u043e\\u0433\\u043e \\u043c\\u043e\\u0434\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\\u0430 \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u044f \\u043d\\u0435 \\u0441\\u043c\\u043e\\u0436\\u0435\\u0442 \\r\\n    //\\u043f\\u0440\\u0438\\u043d\\u0438\\u043c\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0435\\u0432\\u043e\\u0434\\u044b \\u044d\\u0444\\u0438\\u0440\\u0430, \\u0430 \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043a\\u0430 \\u044d\\u0444\\u0438\\u0440\\u0430 \\u0432 \\u0442\\u0430\\u043a\\u0443\\u044e \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u044e \\u043f\\u0440\\u0438\\u0432\\u0435\\u0434\\u0451\\u0442 \\u043a \\u0438\\u0441\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0438\\u044e\\r\\n    function withdraw(uint256 amount) external; //\\u0432\\u044b\\u0432\\u043e\\u0434 \\u0434\\u0435\\u043d\\u0435\\u0433\\r\\n}\",\"keccak256\":\"0xffc958cc9f07f0369730f64124b1ab03086708098320e1ace0a452f2c2a9b02b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052737a250d5630b4cf539739df2c5dacb4c659f2488d6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015606357600080fd5b506114f8806100736000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304663d401461005c57806333a9efa21461007857806366168bd7146100a857806393322f57146100c45780639fe60ba7146100f4575b600080fd5b61007660048036038101906100719190610c6d565b610126565b005b610092600480360381019061008d9190610cd0565b610274565b60405161009f9190610d32565b60405180910390f35b6100c260048036038101906100bd9190610d4d565b610661565b005b6100de60048036038101906100d99190610d4d565b610905565b6040516100eb9190610d9c565b60405180910390f35b61010e60048036038101906101099190610c6d565b610ba4565b60405161011d93929190610dd2565b60405180910390f35b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154421015610271576000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3d48eb77d99c39094f952491876fa684edd58af9778ffa994b431f9d4d081e1660405160405180910390a25b50565b60008082116102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af90610e66565b60405180910390fd5b60008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016102fa93929190610e86565b6020604051808303816000875af1158015610319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033d9190610ee9565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610399929190610f16565b6020604051808303816000875af11580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610ee9565b506000600267ffffffffffffffff8111156103fa576103f9610f3f565b5b6040519080825280602002602001820160405280156104285781602001602082028036833780820191505090505b50905085816000815181106104405761043f610f6e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848160018151811061048f5761048e610f6e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f86846040518363ffffffff1660e01b815260040161052792919061105b565b600060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061056d91906111ca565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed173987846001815181106105c3576105c2610f6e565b5b60200260200101518633426040518663ffffffff1660e01b81526004016105ee959493929190611213565b6000604051808303816000875af115801561060d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061063691906111ca565b90508060018151811061064c5761064b610f6e565b5b60200260200101519450505050509392505050565b33600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e8906112b9565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544210610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076c90611325565b60405180910390fd5b600082116107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af90610e66565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016107f593929190610e86565b6020604051808303816000875af1158015610814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108389190610ee9565b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517846040516108f89190610d32565b60405180910390a3505050565b60008273ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce90611391565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d906113fd565b60405180910390fd5b60006201518083610a57919061144c565b42610a62919061148e565b905060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160011515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff167f340c369ced7c3a65b67543c4f1e839173c42d01b38931b0c01b18c89a1d1ba4b82604051610b919190610d32565b60405180910390a2600091505092915050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3a82610c0f565b9050919050565b610c4a81610c2f565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b600060208284031215610c8357610c82610c05565b5b6000610c9184828501610c58565b91505092915050565b6000819050919050565b610cad81610c9a565b8114610cb857600080fd5b50565b600081359050610cca81610ca4565b92915050565b600080600060608486031215610ce957610ce8610c05565b5b6000610cf786828701610c58565b9350506020610d0886828701610c58565b9250506040610d1986828701610cbb565b9150509250925092565b610d2c81610c9a565b82525050565b6000602082019050610d476000830184610d23565b92915050565b60008060408385031215610d6457610d63610c05565b5b6000610d7285828601610c58565b9250506020610d8385828601610cbb565b9150509250929050565b610d9681610c2f565b82525050565b6000602082019050610db16000830184610d8d565b92915050565b60008115159050919050565b610dcc81610db7565b82525050565b6000606082019050610de76000830186610d8d565b610df46020830185610d23565b610e016040830184610dc3565b949350505050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610e50601d83610e09565b9150610e5b82610e1a565b602082019050919050565b60006020820190508181036000830152610e7f81610e43565b9050919050565b6000606082019050610e9b6000830186610d8d565b610ea86020830185610d8d565b610eb56040830184610d23565b949350505050565b610ec681610db7565b8114610ed157600080fd5b50565b600081519050610ee381610ebd565b92915050565b600060208284031215610eff57610efe610c05565b5b6000610f0d84828501610ed4565b91505092915050565b6000604082019050610f2b6000830185610d8d565b610f386020830184610d23565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fd281610c2f565b82525050565b6000610fe48383610fc9565b60208301905092915050565b6000602082019050919050565b600061100882610f9d565b6110128185610fa8565b935061101d83610fb9565b8060005b8381101561104e5781516110358882610fd8565b975061104083610ff0565b925050600181019050611021565b5085935050505092915050565b60006040820190506110706000830185610d23565b81810360208301526110828184610ffd565b90509392505050565b600080fd5b6000601f19601f8301169050919050565b6110aa82611090565b810181811067ffffffffffffffff821117156110c9576110c8610f3f565b5b80604052505050565b60006110dc610bfb565b90506110e882826110a1565b919050565b600067ffffffffffffffff82111561110857611107610f3f565b5b602082029050602081019050919050565b600080fd5b60008151905061112d81610ca4565b92915050565b6000611146611141846110ed565b6110d2565b9050808382526020820190506020840283018581111561116957611168611119565b5b835b81811015611192578061117e888261111e565b84526020840193505060208101905061116b565b5050509392505050565b600082601f8301126111b1576111b061108b565b5b81516111c1848260208601611133565b91505092915050565b6000602082840312156111e0576111df610c05565b5b600082015167ffffffffffffffff8111156111fe576111fd610c0a565b5b61120a8482850161119c565b91505092915050565b600060a0820190506112286000830188610d23565b6112356020830187610d23565b81810360408301526112478186610ffd565b90506112566060830185610d8d565b6112636080830184610d23565b9695505050505050565b7f4e6f2061637469766520747275737420666f756e640000000000000000000000600082015250565b60006112a3601583610e09565b91506112ae8261126d565b602082019050919050565b600060208201905081810360008301526112d281611296565b9050919050565b7f547275737420706572696f642068617320657870697265640000000000000000600082015250565b600061130f601883610e09565b915061131a826112d9565b602082019050919050565b6000602082019050818103600083015261133e81611302565b9050919050565b7f547275737420616c726561647920657869737473000000000000000000000000600082015250565b600061137b601483610e09565b915061138682611345565b602082019050919050565b600060208201905081810360008301526113aa8161136e565b9050919050565b7f496e76616c6964206d616e616765722061646472657373000000000000000000600082015250565b60006113e7601783610e09565b91506113f2826113b1565b602082019050919050565b60006020820190508181036000830152611416816113da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061145782610c9a565b915061146283610c9a565b925082820261147081610c9a565b915082820484148315176114875761148661141d565b5b5092915050565b600061149982610c9a565b91506114a483610c9a565b92508282019050808211156114bc576114bb61141d565b5b9291505056fea2646970667358221220b9dc401399c7afcc962289786ad92a7122e0999ea597ad6e6e272f7d6284bae664736f6c634300081a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806304663d401461005c57806333a9efa21461007857806366168bd7146100a857806393322f57146100c45780639fe60ba7146100f4575b600080fd5b61007660048036038101906100719190610c6d565b610126565b005b610092600480360381019061008d9190610cd0565b610274565b60405161009f9190610d32565b60405180910390f35b6100c260048036038101906100bd9190610d4d565b610661565b005b6100de60048036038101906100d99190610d4d565b610905565b6040516100eb9190610d9c565b60405180910390f35b61010e60048036038101906101099190610c6d565b610ba4565b60405161011d93929190610dd2565b60405180910390f35b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154421015610271576000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3d48eb77d99c39094f952491876fa684edd58af9778ffa994b431f9d4d081e1660405160405180910390a25b50565b60008082116102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af90610e66565b60405180910390fd5b60008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016102fa93929190610e86565b6020604051808303816000875af1158015610319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033d9190610ee9565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610399929190610f16565b6020604051808303816000875af11580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610ee9565b506000600267ffffffffffffffff8111156103fa576103f9610f3f565b5b6040519080825280602002602001820160405280156104285781602001602082028036833780820191505090505b50905085816000815181106104405761043f610f6e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848160018151811061048f5761048e610f6e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f86846040518363ffffffff1660e01b815260040161052792919061105b565b600060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061056d91906111ca565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed173987846001815181106105c3576105c2610f6e565b5b60200260200101518633426040518663ffffffff1660e01b81526004016105ee959493929190611213565b6000604051808303816000875af115801561060d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061063691906111ca565b90508060018151811061064c5761064b610f6e565b5b60200260200101519450505050509392505050565b33600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e8906112b9565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544210610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076c90611325565b60405180910390fd5b600082116107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af90610e66565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016107f593929190610e86565b6020604051808303816000875af1158015610814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108389190610ee9565b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fcbc4a4091b012bb1329c38bbbb15455f5cac5aa3673da0a7f38cd61a4f495517846040516108f89190610d32565b60405180910390a3505050565b60008273ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce90611391565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d906113fd565b60405180910390fd5b60006201518083610a57919061144c565b42610a62919061148e565b905060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160011515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff167f340c369ced7c3a65b67543c4f1e839173c42d01b38931b0c01b18c89a1d1ba4b82604051610b919190610d32565b60405180910390a2600091505092915050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3a82610c0f565b9050919050565b610c4a81610c2f565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b600060208284031215610c8357610c82610c05565b5b6000610c9184828501610c58565b91505092915050565b6000819050919050565b610cad81610c9a565b8114610cb857600080fd5b50565b600081359050610cca81610ca4565b92915050565b600080600060608486031215610ce957610ce8610c05565b5b6000610cf786828701610c58565b9350506020610d0886828701610c58565b9250506040610d1986828701610cbb565b9150509250925092565b610d2c81610c9a565b82525050565b6000602082019050610d476000830184610d23565b92915050565b60008060408385031215610d6457610d63610c05565b5b6000610d7285828601610c58565b9250506020610d8385828601610cbb565b9150509250929050565b610d9681610c2f565b82525050565b6000602082019050610db16000830184610d8d565b92915050565b60008115159050919050565b610dcc81610db7565b82525050565b6000606082019050610de76000830186610d8d565b610df46020830185610d23565b610e016040830184610dc3565b949350505050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610e50601d83610e09565b9150610e5b82610e1a565b602082019050919050565b60006020820190508181036000830152610e7f81610e43565b9050919050565b6000606082019050610e9b6000830186610d8d565b610ea86020830185610d8d565b610eb56040830184610d23565b949350505050565b610ec681610db7565b8114610ed157600080fd5b50565b600081519050610ee381610ebd565b92915050565b600060208284031215610eff57610efe610c05565b5b6000610f0d84828501610ed4565b91505092915050565b6000604082019050610f2b6000830185610d8d565b610f386020830184610d23565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fd281610c2f565b82525050565b6000610fe48383610fc9565b60208301905092915050565b6000602082019050919050565b600061100882610f9d565b6110128185610fa8565b935061101d83610fb9565b8060005b8381101561104e5781516110358882610fd8565b975061104083610ff0565b925050600181019050611021565b5085935050505092915050565b60006040820190506110706000830185610d23565b81810360208301526110828184610ffd565b90509392505050565b600080fd5b6000601f19601f8301169050919050565b6110aa82611090565b810181811067ffffffffffffffff821117156110c9576110c8610f3f565b5b80604052505050565b60006110dc610bfb565b90506110e882826110a1565b919050565b600067ffffffffffffffff82111561110857611107610f3f565b5b602082029050602081019050919050565b600080fd5b60008151905061112d81610ca4565b92915050565b6000611146611141846110ed565b6110d2565b9050808382526020820190506020840283018581111561116957611168611119565b5b835b81811015611192578061117e888261111e565b84526020840193505060208101905061116b565b5050509392505050565b600082601f8301126111b1576111b061108b565b5b81516111c1848260208601611133565b91505092915050565b6000602082840312156111e0576111df610c05565b5b600082015167ffffffffffffffff8111156111fe576111fd610c0a565b5b61120a8482850161119c565b91505092915050565b600060a0820190506112286000830188610d23565b6112356020830187610d23565b81810360408301526112478186610ffd565b90506112566060830185610d8d565b6112636080830184610d23565b9695505050505050565b7f4e6f2061637469766520747275737420666f756e640000000000000000000000600082015250565b60006112a3601583610e09565b91506112ae8261126d565b602082019050919050565b600060208201905081810360008301526112d281611296565b9050919050565b7f547275737420706572696f642068617320657870697265640000000000000000600082015250565b600061130f601883610e09565b915061131a826112d9565b602082019050919050565b6000602082019050818103600083015261133e81611302565b9050919050565b7f547275737420616c726561647920657869737473000000000000000000000000600082015250565b600061137b601483610e09565b915061138682611345565b602082019050919050565b600060208201905081810360008301526113aa8161136e565b9050919050565b7f496e76616c6964206d616e616765722061646472657373000000000000000000600082015250565b60006113e7601783610e09565b91506113f2826113b1565b602082019050919050565b60006020820190508181036000830152611416816113da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061145782610c9a565b915061146283610c9a565b925082820261147081610c9a565b915082820484148315176114875761148661141d565b5b5092915050565b600061149982610c9a565b91506114a483610c9a565b92508282019050808211156114bc576114bb61141d565b5b9291505056fea2646970667358221220b9dc401399c7afcc962289786ad92a7122e0999ea597ad6e6e272f7d6284bae664736f6c634300081a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14,
        "contract": "contracts/ManagerContract.sol:ManagerContract",
        "label": "router",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ISwap)425"
      },
      {
        "astId": 26,
        "contract": "contracts/ManagerContract.sol:ManagerContract",
        "label": "trusts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Trust)21_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ISwap)425": {
        "encoding": "inplace",
        "label": "contract ISwap",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Trust)21_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ManagerContract.Trust)",
        "numberOfBytes": "32",
        "value": "t_struct(Trust)21_storage"
      },
      "t_struct(Trust)21_storage": {
        "encoding": "inplace",
        "label": "struct ManagerContract.Trust",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/ManagerContract.sol:ManagerContract",
            "label": "manager",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 18,
            "contract": "contracts/ManagerContract.sol:ManagerContract",
            "label": "expiry",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 20,
            "contract": "contracts/ManagerContract.sol:ManagerContract",
            "label": "isActive",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}