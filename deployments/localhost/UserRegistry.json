{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_commission",
          "type": "uint256"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUsers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "commission",
              "type": "uint256"
            }
          ],
          "internalType": "struct UserRegistry.UserInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x762d88adc62ac8e1a73a2e5cfe710219ba29311efdf4163202a3fa75d5f7717a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "408906",
    "logsBloom": "0x
    "blockHash": "0xad2616b7a618f392549dced8a99b4b32f01fd2439e310d6d222f851dd011d1e7",
    "transactionHash": "0x762d88adc62ac8e1a73a2e5cfe710219ba29311efdf4163202a3fa75d5f7717a",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "408906",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b99913c63f84e22f8fac9a82fa39f896",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commission\",\"type\":\"uint256\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"internalType\":\"struct UserRegistry.UserInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserRegistry.sol\":\"UserRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract UserRegistry {\\r\\n    struct UserInfo {\\r\\n        address userAddress;\\r\\n        uint256 commission; // \\u041f\\u0440\\u043e\\u0446\\u0435\\u043d\\u0442 \\u043a\\u043e\\u043c\\u0438\\u0441\\u0441\\u0438\\u0438\\r\\n    }\\r\\n\\r\\n    UserInfo[] public users;\\r\\n    mapping(address => bool) private isRegistered;\\r\\n\\r\\n    // \\u0414\\u043e\\u0431\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f\\r\\n    function addUser(address _userAddress, uint256 _commission) external {\\r\\n        require(!isRegistered[_userAddress], \\\"User already registered\\\");\\r\\n        users.push(UserInfo({userAddress: _userAddress, commission: _commission}));\\r\\n        isRegistered[_userAddress] = true;\\r\\n    }\\r\\n\\r\\n    // \\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0441\\u043f\\u0438\\u0441\\u043a\\u0430 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\\r\\n    function getUsers() external view returns (UserInfo[] memory) {\\r\\n        return users;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x435395054663108920bbda014381ddae0b3aadb71e995c1bcbd2271ffdc0fca8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506106728061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062ce8e3e14610045578063365b98b214610063578063d301719314610094575b600080fd5b61004d6100b0565b60405161005a919061048c565b60405180910390f35b61007d600480360381019061007891906104df565b61016f565b60405161008b92919061052a565b60405180910390f35b6100ae60048036038101906100a9919061057f565b6101c3565b005b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561016657838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200190600101906100d4565b50505050905090565b6000818154811061017f57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610250576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102479061061c565b60405180910390fd5b600060405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ab82610380565b9050919050565b6103bb816103a0565b82525050565b6000819050919050565b6103d4816103c1565b82525050565b6040820160008201516103f060008501826103b2565b50602082015161040360208501826103cb565b50505050565b600061041583836103da565b60408301905092915050565b6000602082019050919050565b600061043982610354565b610443818561035f565b935061044e83610370565b8060005b8381101561047f5781516104668882610409565b975061047183610421565b925050600181019050610452565b5085935050505092915050565b600060208201905081810360008301526104a6818461042e565b905092915050565b600080fd5b6104bc816103c1565b81146104c757600080fd5b50565b6000813590506104d9816104b3565b92915050565b6000602082840312156104f5576104f46104ae565b5b6000610503848285016104ca565b91505092915050565b610515816103a0565b82525050565b610524816103c1565b82525050565b600060408201905061053f600083018561050c565b61054c602083018461051b565b9392505050565b61055c816103a0565b811461056757600080fd5b50565b60008135905061057981610553565b92915050565b60008060408385031215610596576105956104ae565b5b60006105a48582860161056a565b92505060206105b5858286016104ca565b9150509250929050565b600082825260208201905092915050565b7f5573657220616c72656164792072656769737465726564000000000000000000600082015250565b60006106066017836105bf565b9150610611826105d0565b602082019050919050565b60006020820190508181036000830152610635816105f9565b905091905056fea2646970667358221220cef60421ba69cfa839ab66c2251eadafbd349ae4b816c7b13107ad588b3bdcb064736f6c634300081a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100405760003560e01c8062ce8e3e14610045578063365b98b214610063578063d301719314610094575b600080fd5b61004d6100b0565b60405161005a919061048c565b60405180910390f35b61007d600480360381019061007891906104df565b61016f565b60405161008b92919061052a565b60405180910390f35b6100ae60048036038101906100a9919061057f565b6101c3565b005b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561016657838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815260200190600101906100d4565b50505050905090565b6000818154811061017f57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610250576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102479061061c565b60405180910390fd5b600060405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ab82610380565b9050919050565b6103bb816103a0565b82525050565b6000819050919050565b6103d4816103c1565b82525050565b6040820160008201516103f060008501826103b2565b50602082015161040360208501826103cb565b50505050565b600061041583836103da565b60408301905092915050565b6000602082019050919050565b600061043982610354565b610443818561035f565b935061044e83610370565b8060005b8381101561047f5781516104668882610409565b975061047183610421565b925050600181019050610452565b5085935050505092915050565b600060208201905081810360008301526104a6818461042e565b905092915050565b600080fd5b6104bc816103c1565b81146104c757600080fd5b50565b6000813590506104d9816104b3565b92915050565b6000602082840312156104f5576104f46104ae565b5b6000610503848285016104ca565b91505092915050565b610515816103a0565b82525050565b610524816103c1565b82525050565b600060408201905061053f600083018561050c565b61054c602083018461051b565b9392505050565b61055c816103a0565b811461056757600080fd5b50565b60008135905061057981610553565b92915050565b60008060408385031215610596576105956104ae565b5b60006105a48582860161056a565b92505060206105b5858286016104ca565b9150509250929050565b600082825260208201905092915050565b7f5573657220616c72656164792072656769737465726564000000000000000000600082015250565b60006106066017836105bf565b9150610611826105d0565b602082019050919050565b60006020820190508181036000830152610635816105f9565b905091905056fea2646970667358221220cef60421ba69cfa839ab66c2251eadafbd349ae4b816c7b13107ad588b3bdcb064736f6c634300081a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/UserRegistry.sol:UserRegistry",
        "label": "users",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(UserInfo)6_storage)dyn_storage"
      },
      {
        "astId": 14,
        "contract": "contracts/UserRegistry.sol:UserRegistry",
        "label": "isRegistered",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(UserInfo)6_storage)dyn_storage": {
        "base": "t_struct(UserInfo)6_storage",
        "encoding": "dynamic_array",
        "label": "struct UserRegistry.UserInfo[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(UserInfo)6_storage": {
        "encoding": "inplace",
        "label": "struct UserRegistry.UserInfo",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/UserRegistry.sol:UserRegistry",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/UserRegistry.sol:UserRegistry",
            "label": "commission",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}